% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extendr-wrappers.R
\name{fozzie_join_rs}
\alias{fozzie_join_rs}
\title{Performs a fuzzy join between two data frames based on approximate string matching.}
\usage{
fozzie_join_rs(df1, df2, by, method, q, max_distance)
}
\description{
This function matches records in \code{df1} and \code{df2} using specified column names, allowing
matches within a given distance threshold using various fuzzy matching methods.
It constructs index maps for efficient lookups and comparisons, ensuring minimal
redundant calculations.
}
\section{Parameters}{
\itemize{
\item \code{df1} (\code{List}): The first data frame (R List format), containing named vectors.
\item \code{df2} (\code{List}): The second data frame.
\item \code{by} (\verb{HashMap<String, String>}): A mapping of column names specifying join keys:
\itemize{
\item The key represents the column name in \code{df1}.
\item The value represents the corresponding column name in \code{df2}.
}
\item \code{method} (\code{String}): The fuzzy matching method to use. Supported methods:
\itemize{
\item \code{"osa"} - Optimal string alignment distance.
\item \code{"levenshtein"} or \code{"lv"} - Standard Levenshtein edit distance.
\item \code{"damerau_levensthein"} or \code{"dl"} - Damerau-Levenshtein edit distance.
\item \code{"hamming"} - Hamming distance (only works for equal-length strings).
\item \code{"lcs"} - Longest common subsequence similarity.
\item \code{"qgram"} - Q-gram comparison (requires \code{q} value).
\item \code{"cosine"} - Cosine similarity (requires \code{q} value).
\item \code{"jaccard"} - Jaccard similarity (requires \code{q} value).
\item \code{"jaro_winkler"} or \code{"jw"} - Jaro-Winkler similarity.
\item \code{"jaro"} - Standard Jaro similarity.
}
\item \code{q} (\verb{Option<i32>}): The \emph{q}-gram size (required for \code{"qgram"}, \code{"cosine"}, and \code{"jaccard"} methods).
\item \code{max_distance} (\code{f64}): Maximum allowable distance for a match.
}
}

\section{Returns}{
\itemize{
\item \code{Robj}: A data frame containing matched records from \code{df1} and \code{df2},
with column names suffixed as \code{.x} (from \code{df1}) and \code{.y} (from \code{df2}).
}
}

\section{Notes}{
\itemize{
\item Uses \strong{parallel iteration} (\code{par_iter()}) for efficient comparisons.
\item Only evaluates string pairs where the difference in length is within \code{max_distance}.
\item Minimizes redundant checks by using \strong{indexed maps} instead of naive pairwise comparisons.
\item Ensures column alignment while supporting fuzzy matching.
}
}

\section{See Also}{
\itemize{
\item \href{https://docs.rs/levenshtein/latest/levenshtein/}{\code{levenshtein}} - Computes edit distances.
\item \href{https://extendr.github.io/}{\code{extendr}} - Enables Rust interoperability with R.
\item \href{https://extendr.github.io/}{\verb{data_frame!}} - Constructs an R-compatible data frame.
}
}

